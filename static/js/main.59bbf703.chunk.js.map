{"version":3,"sources":["reportWebVitals.js","components/SearchBox.js","components/Card.js","components/CardList.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Card","name","email","id","alt","src","width","height","CardList","robots","cardComponent","map","user","i","Scroll","props","style","overflowY","border","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2KAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCSCQ,EAdG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAChC,OACE,qBAAKC,UAAU,MAAf,SACE,uBAEEA,UAAY,mCACZC,KAAK,SACLC,YAAY,cACZC,SAAUJ,OCIHK,EAZF,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,GAC3B,OACE,sBAAKP,UAAU,sDAAf,UACE,qBAAKQ,IAAI,QAAQC,IAAG,+BAA0BF,EAA1B,aAAyCG,MAAM,MAAMC,OAAO,QAChF,gCACE,6BAAKN,IACL,4BAAIC,WCWGM,EAhBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACZC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACtC,OACE,cAAC,EAAD,CACAV,GAAIM,EAAOI,GAAGV,GACdF,KAAMQ,EAAOI,GAAGZ,KACfC,MAAOO,EAAOI,GAAGX,OAHPW,MAMf,OACE,8BACGH,KCJQI,EARA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBX,OAAQ,SAAtE,SACGQ,EAAMI,YCiBEC,E,kDAnBb,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WACE,OAAIG,KAAKJ,MAAMC,SACN,2DAEFG,KAAKV,MAAMI,a,GAhBKQ,aC8CZC,E,kDAzCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEhC,YAAaoC,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACXZ,OAAQ,GACRf,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBuC,MAAM,8CACL9C,MAAK,SAAA+C,GAAQ,OAAIA,EAASC,UAC1BhD,MAAK,SAAAiD,GAAK,OAAI,EAAKV,SAAS,CAACjB,OAAQ2B,S,oBAOxC,WACE,MAAgCX,KAAKJ,MAA7BZ,EAAR,EAAQA,OAAQf,EAAhB,EAAgBA,YACV2C,EAAiB5B,EAAO6B,QAAO,SAAAC,GACnC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAS/C,EAAY8C,kBAEvD,OAAK/B,EAAOiC,OAIN,sBAAK9C,UAAU,MAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAc8B,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAE,EAAF,CAAWpB,OAAS4B,WARvB,6C,GAzBKM,IAAMhB,W,MCExBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BhE,M","file":"static/js/main.59bbf703.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className=\"pa2\">\r\n      <input\r\n\r\n        className = \"pa3 ba b--green bg-lightest-blue\"\r\n        type='search'\r\n        placeholder='search cats'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Card = ({ name, email, id } ) => {\r\n  return (\r\n    <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n      <img alt=\"Kitty\" src={`https://robohash.org/${id}?set=set4`} width=\"200\" height=\"200\"/>\r\n      <div>\r\n        <h2>{name}</h2>\r\n        <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","// import react from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n  const cardComponent = robots.map((user, i) => {\r\n    return (\r\n      <Card key={i}\r\n      id={robots[i].id}\r\n      name={robots[i].name}\r\n       email={robots[i].email}\r\n      />);\r\n  })\r\n  return(\r\n    <div>\r\n      {cardComponent}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflowY: \"scroll\", border: \"1px solid black\", height: \"800px\"}}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true})\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError){\r\n      return <h1>OOOOOps. That is not good</h1>\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React from 'react';\r\nimport SearchBox from '../components/SearchBox';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => this.setState({robots: users}));\r\n\r\n  }\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { robots, searchfield } = this.state;\r\n    const filteredRobots = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n    });\r\n    if (!robots.length){\r\n      return <h1>Loading</h1>\r\n    } else {\r\n      return(\r\n          <div className=\"tc \">\r\n            <h1 className=\"f1\">Cat Friends</h1>\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n            <Scroll>\r\n              <ErrorBoundry>\r\n                < CardList robots={ filteredRobots } />\r\n              </ErrorBoundry>\r\n            </Scroll>\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}